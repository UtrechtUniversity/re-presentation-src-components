--- 
format: 
  revealjs:
    theme: themes/uu.scss
    logo: images/UU_logo_2021_EN_RGB.png
    footer: ""
---

# ResearchCloud Component Design

::: {.r-stack}
Mini-Workshop
:::

::: {.footer}
Jelle Treep & Dawa Ometto
:::

# Introduction

## Who are we?

ITS Research Engineering. Core activities include:

- Projects
- Trainings
- Consultancy (e.g. HPC)
- VRE service

##

<br>

![](images/rdm.png)

::: {style="text-align: center; margin-top: 180px; font-size: 3em; color: red;"}

uu.nl/rdm

:::

## Welcome!

Do you have experience with:

* ResearchCloud?
* Ansible / configuration management?
* Docker / Podman?

## Program

- 09.00: Walk-in
- 09.30: Welcome & intro to SRC
- 10.00: Some usecases for SRC components
- 10.15: Introduction to designing components & best practices
- 11.15: Design your own component!
- 12.15: Wrap up
- 12.30-13.00: Lunch

## These Slides

You can find these slides here:

[https://edu.nl/gy6np](https://utrechtuniversity.github.io/re-presentation-src-components/slides#/)

You can copy/paste some URLs and commands later on.

## ResearchCloud Lightning Intro

Some advantages of SURF ResearchCloud:

- Easy access to compute and storage
- Researchers can start VMs themselves
- Easy collaboration (SRAM)
- Cloud neutral: deploy VMs on SURF infrastructure or elsewhere

## ResearchCloud Lightning Intro

SURF HPC cloud infrastructure:

- up to 60 CPU cores
- up to 750 GB RAM
- up to 4 GPU drives (NVIDIA A10)
- up to 1.5 TB storage



## ResearchCloud Lightning Intro

![](images/SRAM-collaboration.png)

## ResearchCloud Lightning Intro

![](images/SRAM-members.png)

## ResearchCloud Lightning Intro

![](images/SRAM-groups.png)

## ResearchCloud Lightning Intro

:::{.theme-section-small}
* Workspaces (aka VMs, servers)
  - Running instances of a Catalog item
* Catalog Items
  - A set of components
  - Parameters
  - VM size
* Components!
  - (Installation) scripts
    - Ansible
    - Docker
    - Powershell
:::

## ResearchCloud Lightning Intro

:::{.theme-section}
[ResearchCloud Portal](https://surfresearchcloud.nl/)

<br>

Documentation for ResearchCloud:

  * Our [VRE Docs](https://utrechtuniversity.github.io/vre-docs/)
  * SURF's [wiki](https://servicedesk.surf.nl/wiki/display/WIKI/SURF+Research+Cloud)

:::

## Some use cases for components

- Adam El Kassimi 
- Dawa Ometto ([Galaxy](https://github.com/UtrechtUniversity/src-component-galaxy/))

# Creating components

## Portal

Note about the special SURF components:

- SRC-OS
- SRC-CO
- SRC-External (for different types)
- SRC Nginx

## SRC-External

Custom components are executed *on the workspace* from within SRC-External.

This can lead to complications due to:

* Specific Ansible version on the workspace
* Specific Ansible collections on the workspace
* OS-dependencies on the workspace
* ...

## Ansible

1. Fork the [template repo](https://github.com/UtrechtUniversity/src-component-template)
1. Clone your fork locally
1. `cd` to the repo directory

## Ansible

Try running the test playbook on a container!

```
podman pull ghcr.io/utrechtuniversity/src-test-workspace:ubuntu_jammy

podman run -d --name src_component_test -v $(pwd):/etc/rsc/my_component ghcr.io/utrechtuniversity/src-test-workspace:ubuntu_jammy /sbin/init

podman exec src_component_test run_component.sh /etc/rsc/my_component/playbook.yml
```

## Ansible

If you're using Docker instead of Podman:

```
docker pull ghcr.io/utrechtuniversity/src-test-workspace:ubuntu_jammy

docker run --privileged -d --name src_component_test -v $(pwd):/etc/rsc/my_component ghcr.io/utrechtuniversity/src-test-workspace:ubuntu_jammy /sbin/init

docker exec src_component_test run_component.sh /etc/rsc/my_component/playbook.yml
```

## Ansible
### Playbooks and tasks

* Variables
* Conditionals
* Loops

## Ansible
### Roles and collections

* What is a role/collection?
* Using external roles and collections on ResearchCloud

## Ansible
### Our collections

* [uusrc.general](https://github.com/UtrechtUniversity/researchcloud-items) (main repo, [docs](https://utrechtuniversity.github.io/researchcloud-items/))
* [uusrc.ibridges](https://github.com/UtrechtUniversity/ibridges-ansible) (iRODS data transfer)

## Ansible
### Do’s and don’ts

* Do: use modules instead of command
* Don’t: try to use Ansible like a programming language (e.g. variable reassignment)
* ...

## CI, linting, testing

No time to explain in detail, but see the template repo.

# Creating your own component

##

Possible use cases to explore:

1. VSCodium
1. Recreate Jupyter Notebook component
1. …something else? Binder?
1. Your own app!

##

Think about the steps that need to be performed, e.g:

1. Create a python venv
1. Install jupyterlabs in it
1. Run it as a system service
1. Add a reverse proxy

What parameters do you need? 

# Wrap up

* How did it go?
* Future steps